#!/usr/bin/perl

use strict;
use warnings;
use bigint;

#Pentagonal numbers are generated by the formula, Pn=n(3n-1)/2. The first ten pentagonal numbers are:
#
#1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
#
#It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 - 22 = 48, is not pentagonal.
#
#Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference is pentagonal and D = |Pk - Pj| is minimised; what is the value of D?

my %pents = ( 1 => 1 );
my $min = 999999999;
my $n = 2;
my $pent = 1;

FOUND: while ( $min > 3 * $n - 2 ) {
  $pent += 3 * $n - 2;
  $n++;
  foreach my $smallpent ( keys %pents ) {
    if ( defined $pents{ $pent - $smallpent } && defined $pents{ $pent - 2 * $smallpent } ) {
      printf "%d\n", $pent - 2 * $smallpent;
      last FOUND;
    }
  }
  $pents{ $pent } = 1;
}

#note: I did this in a horribly slow way. The fastest way was to figure out a quick formula to see if something is pentagonal and NOT to save all pentagonal numbers and iterate over them.
#
#n is a whole number
#Pn = n(3n-1)/2
#2Pn = 3n^2-n
#24Pn = 36n^2 - 12n
#24Pn + 1 = 36n^2 - 12n + 1
#24Pn + 1 = (6n - 1)^2
#sqrt(24Pn + 1) = 6n - 1
#(sqrt(24Pn + 1) + 1)/6 = n
#
#if (sqrt(24Pn + 1) + 1)/6 is a whole number, then Pn is pentagonal
